{"version":3,"sources":["context.js","config.js","Folders/Folders.js","helper-functions.js","ValidationError.js","NoteContent/NoteContent.js","editFolder/EditFolder.js","editNote/EditNote.js","Note/Note.js","NotesListMain/NotesListMain.js","AddFolder/AddFolder.js","AddNote/AddNote.js","ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","notes","folders","addNote","addFolder","deleteNote","deleteFolder","updateNote","updateFolder","config","API_ENDPOINT","process","API_KEY","Folders","deleteFolderRequest","folderId","cb","fetch","concat","Config","method","headers","content-type","Authorization","then","res","ok","json","error","Promise","reject","data","_this","props","history","push","catch","console","_this2","this","react_default","a","createElement","className","context","map","folder","key","id","style","listStyle","react_router_dom","to","activeClassName","folder_name","filter","note","length","match","params","disabled","type","onClick","Component","ValidationError","message","Fragment","contextType","Context","defaultProps","onClickDelete","NoteContent","noteId","noteIdNum","Number","find","log","findNote","note_name","content","goBack","EditFolder","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","target","title","value","newFolder","parseInt","body","JSON","stringify","validateTitle","fieldValue","state","trim","getFolderTitle","setState","touched","isFormValid","resData","_this3","isValid","onSubmit","event","htmlFor","onChange","name","withRouter","EditNote","validateName","validateContent","validateFolderId","chosen","getTitle","getContent","filled","getFolderId","_this$state","modified_date","Date","Content-Type","valid","_this$state2","placeholder","defaultValue","NoteItem","src_context","Consumer","format","NotesListMain","notesForFolder","foldersId","folderIdNum","getNotesForFolders","AddFolder","AddNote","Error","modified","ErrorBoundary","hasError","children","App","setNote","setFolder","toConsumableArray","updatedNote","updatedFolder","all","_ref","_ref2","slicedToArray","foldersRes","notesRes","_ref3","_ref4","err","contextValue","Provider","ErrorBoundary_ErrorBoundary","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64a5fb8c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default React.createContext({\r\n  notes: [],\r\n  folders: [],\r\n  addNote: () => {},\r\n  addFolder: () => {},\r\n  deleteNote: () => {},\r\n  deleteFolder: () => {},\r\n  updateNote: () => {},\r\n  updateFolder: () => {}\r\n});\r\n","export default {\r\n  API_ENDPOINT: process.env.API_ENDPOINT || \"http://localhost:8000\",\r\n  API_KEY: process.env.REACT_APP_API_KEY\r\n};\r\n","import React from \"react\";\r\nimport Context from \"../context\";\r\nimport \"./Folders.css\";\r\nimport Config from \"../config\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { numOfNotes } from \"../helper-functions\";\r\n\r\nexport default class Folders extends React.Component {\r\n  static contextType = Context;\r\n\r\n  deleteFolderRequest = (folderId, cb) => {\r\n    fetch(`${Config.API_ENDPOINT}/api/folders/${folderId}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${Config.API_KEY}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          return res.json().then(error => Promise.reject(error));\r\n        }\r\n      })\r\n      .then(data => {\r\n        cb(folderId);\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"foldersList\">\r\n        {this.context.folders.map(folder => (\r\n          <li key={folder.id} style={{ listStyle: \"none\" }}>\r\n            <NavLink\r\n              to={`/folders/${folder.id}`}\r\n              activeClassName=\"active\"\r\n              className=\"folder-links\"\r\n            >\r\n              {folder.folder_name}{\" \"}\r\n            </NavLink>\r\n            <p>{numOfNotes(this.context.notes, folder.id)}</p>\r\n          </li>\r\n        ))}\r\n        <NavLink to=\"/add-folder\">\r\n          <button>+ Add Folder</button>\r\n        </NavLink>\r\n        {!this.props.match.params.folderId ? null : (\r\n          <NavLink to={`/edit-folder/${this.props.match.params.folderId}`}>\r\n            <button>Edit Folder</button>\r\n          </NavLink>\r\n        )}\r\n        <button\r\n          disabled={!this.props.match.params.folderId}\r\n          className=\"delete-folder-btn\"\r\n          type=\"button\"\r\n          onClick={() =>\r\n            this.deleteFolderRequest(\r\n              this.props.match.params.folderId,\r\n              this.context.deleteFolder\r\n            )\r\n          }\r\n        >\r\n          DELETE FOLDER\r\n        </button>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nFolders.defaultProps = {\r\n  onClickDelete: () => {}\r\n};\r\n\r\nFolders.defaultProps = {\r\n  folders: [],\r\n  notes: []\r\n};\r\n","export const getNotesForFolders = (notes, foldersId) => {\r\n  const folderIdNum = Number(foldersId);\r\n  return !foldersId ? notes : notes.filter(note => note.folder === folderIdNum);\r\n};\r\n\r\nexport const findNote = (notes, noteId) => {\r\n  const noteIdNum = Number(noteId);\r\n  const note = notes.find(note => note.id === noteIdNum);\r\n  console.log(note);\r\n  return note;\r\n};\r\n\r\nexport const numOfNotes = (notes, folderId) => {\r\n  return notes.filter(note => note.folder === folderId).length;\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function ValidationError(props) {\r\n  if (props.message) {\r\n    return <div className=\"error\">{props.message}</div>;\r\n  }\r\n  return <></>;\r\n}\r\n","import React from \"react\";\r\nimport Context from \"../context\";\r\nimport { findNote } from \"../helper-functions\";\r\nimport \"./NoteContent.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class NoteContent extends React.Component {\r\n  static contextType = Context;\r\n  render() {\r\n    const note = findNote(this.context.notes, this.props.match.params.noteId);\r\n    return (\r\n      <div className=\"note-content-wrapper\">\r\n        <header className=\"note-header\">\r\n          <h3 className=\"note-title\">{note.note_name}</h3>\r\n        </header>\r\n        <p>{note.content}</p>\r\n        <div className=\"return-btn-container\">\r\n          <button onClick={this.props.history.goBack} className=\"return-btn\">\r\n            Go Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNoteContent.defaultProps = {\r\n  notes: []\r\n};\r\n\r\nNoteContent.propTypes = {\r\n  noteId: PropTypes.string\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Config from \"../config\";\r\nimport Context from \"../context\";\r\nimport ValidationError from \"../ValidationError\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./EditFolder.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport NoteContent from \"../NoteContent/NoteContent\";\r\n\r\nclass EditFolder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      folder: {\r\n        value: \"\",\r\n        touched: false\r\n      }\r\n    };\r\n  }\r\n\r\n  static contextType = Context;\r\n\r\n  componentDidMount() {\r\n    const { folderId } = this.props.match.params;\r\n    fetch(`${Config.API_ENDPOINT}/api/folders/${folderId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${Config.API_KEY}`,\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          return res.json().then(error => Promise.reject(error));\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        this.setState({\r\n          folder: { value: resData.folder_name }\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const folder_name = e.target.title.value;\r\n\r\n    const { folderId } = this.props.match.params;\r\n    const newFolder = { id: parseInt(folderId), folder_name };\r\n\r\n    fetch(Config.API_ENDPOINT + `/api/folders/${folderId}`, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(newFolder),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${Config.API_KEY}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          return res.json().then(error => Promise.reject(error));\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.context.updateFolder(newFolder);\r\n        this.props.history.goBack();\r\n      });\r\n  };\r\n\r\n  validateTitle = fieldValue => {\r\n    const title = this.state.folder.value.trim();\r\n    if (title.length === 0) {\r\n      return \"Please enter a title\";\r\n    } else if (title.length < 3 || title.length > 20) {\r\n      return \"Title must be be between 3 and 20 characters long\";\r\n    }\r\n  };\r\n\r\n  getFolderTitle = title => {\r\n    this.setState({\r\n      folder: {\r\n        value: title,\r\n        touched: true\r\n      }\r\n    });\r\n  };\r\n\r\n  isFormValid = () => {\r\n    const { folder } = this.state;\r\n    return folder.touched ? true : false;\r\n  };\r\n\r\n  render() {\r\n    const { folder } = this.state;\r\n    const isValid = this.isFormValid();\r\n    return (\r\n      <div className=\"edit-folder-container\">\r\n        <form onSubmit={event => this.handleSubmit(event)}>\r\n          <label htmlFor=\"folder name\">Folder Name:</label>\r\n          <input\r\n            onChange={e => this.getFolderTitle(e.target.value)}\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={folder.value}\r\n          />\r\n          <button type=\"submit\" disabled={!isValid}>\r\n            Submit\r\n          </button>{\" \"}\r\n          <div className=\"return-button-container\">\r\n            <button\r\n              onClick={this.props.history.goBack}\r\n              type=\"button\"\r\n              className=\"return-button\"\r\n            >\r\n              Go Back\r\n            </button>\r\n          </div>\r\n        </form>\r\n        {!this.state.folder.value && (\r\n          <ValidationError message={this.validateTitle()} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditFolder.propTypes = {\r\n  folderId: PropTypes.number,\r\n  folder_name: PropTypes.string\r\n};\r\n\r\nexport default withRouter(EditFolder);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../context\";\r\nimport Config from \"../config\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ValidationError from \"../ValidationError\";\r\n\r\nclass EditNote extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      note_name: {\r\n        value: \"\",\r\n        touched: false\r\n      },\r\n      content: {\r\n        value: \"\",\r\n        filled: false\r\n      },\r\n      folder: {\r\n        value: \"\",\r\n        chosen: false\r\n      },\r\n      modified_date: \"\"\r\n    };\r\n  }\r\n  static contextType = Context;\r\n\r\n  componentDidMount() {\r\n    const { noteId } = this.props.match.params;\r\n    fetch(`${Config.API_ENDPOINT}/api/notes/${noteId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${Config.API_KEY}`,\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          return res.json().then(error => Promise.reject(error));\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        this.setState({\r\n          note_name: {\r\n            value: resData.note_name\r\n          },\r\n          content: {\r\n            value: resData.content\r\n          }\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n        this.setState({ e });\r\n      });\r\n  }\r\n\r\n  validateName = fieldValue => {\r\n    const name = this.state.note_name.value.trim();\r\n    if (name.length === 0) {\r\n      return \"Please enter a name for the note\";\r\n    } else if (name.length < 3 || name.length > 20) {\r\n      return \"Note name should be between 3 and 20 characters\";\r\n    }\r\n  };\r\n\r\n  validateContent = fieldValue => {\r\n    const content = this.state.content.value;\r\n    if (content === \"\") {\r\n      return \"Please enter content\";\r\n    }\r\n  };\r\n\r\n  validateFolderId = fieldValue => {\r\n    const folderId = this.state.folder.chosen;\r\n    if (folderId === false) {\r\n      return \"Please select a folder\";\r\n    }\r\n  };\r\n\r\n  getTitle = name => {\r\n    this.setState({\r\n      note_name: { value: name, touched: true }\r\n    });\r\n  };\r\n\r\n  getContent = content => {\r\n    this.setState({\r\n      content: { value: content, filled: true }\r\n    });\r\n  };\r\n\r\n  getFolderId = folderId => {\r\n    this.setState({\r\n      folder: {\r\n        value: folderId,\r\n        chosen: true\r\n      }\r\n    });\r\n  };\r\n\r\n  isFormValid = () => {\r\n    const { note_name, content, folder } = this.state;\r\n    return note_name.value && content.value && folder.chosen;\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { noteId } = this.props.match.params;\r\n    const note = {\r\n      id: parseInt(noteId),\r\n      note_name: event.target.note_name.value,\r\n      folder: parseInt(event.target.folder.value),\r\n      content: event.target.content.value,\r\n      modified_date: new Date()\r\n    };\r\n    fetch(`${Config.API_ENDPOINT}/api/notes/${noteId}`, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(note),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${Config.API_KEY}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          return res.json().then(e => Promise.reject(e));\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.context.updateNote(note);\r\n        this.props.history.goBack();\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const valid = this.isFormValid();\r\n    const { note_name, content } = this.state;\r\n    return (\r\n      <div className=\"edit-note-container\">\r\n        <form onSubmit={e => this.handleSubmit(e)}>\r\n          <div className=\"edit-name-container\">\r\n            <label htmlFor=\"edit name\" className=\"edit-note-label\" /> Edit\r\n            Title:\r\n            <input\r\n              type=\"text\"\r\n              id=\"note_name\"\r\n              name=\"note_name\"\r\n              placeholder=\"My To Dos\"\r\n              defaultValue={note_name.value}\r\n              onChange={e => this.getTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          {this.state.note_name.chosen && (\r\n            <ValidationError message={this.validateName()} />\r\n          )}\r\n          <div className=\"add-content-container\">\r\n            <label className=\"add-content-label\" htmlFor=\"add content\" /> Add\r\n            Content:\r\n            <textarea\r\n              id=\"content\"\r\n              name=\"content\"\r\n              value={content.value}\r\n              onChange={e => this.getContent(e.target.value)}\r\n            />\r\n            {!content.value && (\r\n              <ValidationError message={this.validateContent()} />\r\n            )}\r\n          </div>\r\n          <select\r\n            name=\"folder\"\r\n            onChange={e => this.getFolderId(e.target.value)}\r\n          >\r\n            <option>Select Folder</option>\r\n            {this.context.folders.map(folder => (\r\n              <option key={folder.id} value={folder.id}>\r\n                {folder.folder_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {this.state.folder.chosen === false && (\r\n            <ValidationError message={this.validateFolderId()} />\r\n          )}\r\n          <div className=\"button-container\">\r\n            <button type=\"submit\" disabled={!valid}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n          <div className=\"note-return-button\">\r\n            <button type=\"button\" onClick={this.props.history.goBack}>\r\n              Go Back\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditNote.propTypes = {\r\n  noteId: PropTypes.number,\r\n  note_name: PropTypes.string,\r\n  content: PropTypes.string\r\n};\r\n\r\nexport default withRouter(EditNote);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Context from \"../context\";\r\nimport Config from \"../config\";\r\nimport { format } from \"date-fns\";\r\nimport \"./Note.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction deleteNoteRequest(noteId, cb) {\r\n  fetch(`${Config.API_ENDPOINT}/api/notes/${noteId}`, {\r\n    method: \"delete\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${Config.API_KEY}`\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (!res.ok) {\r\n        return res.json().then(error => Promise.reject(error));\r\n      }\r\n    })\r\n    .then(data => {\r\n      cb(noteId);\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n}\r\n\r\nexport default function NoteItem(props) {\r\n  return (\r\n    <Context.Consumer>\r\n      {context => (\r\n        <li\r\n          key={props.note.id}\r\n          style={{ listStyle: \"none\" }}\r\n          className=\"note-item\"\r\n        >\r\n          <h2 className=\"note-title\">\r\n            <NavLink to={`/notes/${props.note.id}`} key={props.note.id}>\r\n              {props.note.note_name}\r\n            </NavLink>\r\n          </h2>\r\n          <p className=\"date\">\r\n            Modified: {format(props.note.modified_date, \"Do MMM YYYY\")}\r\n          </p>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => deleteNoteRequest(props.note.id, context.deleteNote)}\r\n          >\r\n            DELETE\r\n          </button>\r\n          <NavLink to={`/edit-note/${props.note.id}`}>\r\n            <button type=\"button\">EDIT NOTE</button>\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    </Context.Consumer>\r\n  );\r\n}\r\n\r\nNoteItem.defaultProps = {\r\n  note: {}\r\n};\r\n\r\nNoteItem.propTypes = {\r\n  noteId: PropTypes.number\r\n};\r\n","import React from \"react\";\r\nimport { getNotesForFolders } from \"../helper-functions\";\r\nimport Context from \"../context\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport Note from \"../Note/Note\";\r\nimport \"./NotesListMain.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass NotesListMain extends React.Component {\r\n  static contextType = Context;\r\n\r\n  render() {\r\n    // console.log(this.context.notes);\r\n    const notesForFolder = getNotesForFolders(\r\n      this.context.notes,\r\n      this.props.match.params.folderId\r\n    );\r\n    // console.log(this.props);\r\n    return (\r\n      <ul>\r\n        {notesForFolder.map(note => (\r\n          <Note key={note.note_name} note={note} /> // added note_name\r\n        ))}\r\n        <div className=\"add-note-wrapper\">\r\n          <NavLink to=\"/add-note\">\r\n            <button className=\"add-note-btn\">+ Add Note</button>\r\n          </NavLink>\r\n        </div>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nNotesListMain.defaultProps = {\r\n  notes: []\r\n};\r\n\r\nNotesListMain.propTypes = {\r\n  folderId: PropTypes.string\r\n};\r\n\r\nexport default withRouter(NotesListMain);\r\n","import React, { Component } from \"react\";\r\nimport Config from \"../config\";\r\nimport Context from \"../context\";\r\nimport ValidationError from \"../ValidationError\";\r\nimport \"./AddFolder.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass AddFolder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      folder: {\r\n        value: \"\",\r\n        touched: false\r\n      }\r\n    };\r\n  }\r\n\r\n  static contextType = Context;\r\n\r\n  validateTitle = fieldValue => {\r\n    const title = this.state.folder.value.trim();\r\n    if (title.length === 0) {\r\n      return \"Please enter a title\";\r\n    } else if (title.length < 3 || title.length > 20) {\r\n      return \"Title must be be between 3 and 20 characters long\";\r\n    }\r\n  };\r\n\r\n  getFolderTitle = title => {\r\n    this.setState({\r\n      folder: {\r\n        value: title,\r\n        touched: true\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const folder = {\r\n      folder_name: e.target.title.value\r\n    };\r\n\r\n    fetch(`${Config.API_ENDPOINT}/api/folders`, {\r\n      method: \"post\",\r\n      body: JSON.stringify(folder),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${Config.API_KEY}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(error => {\r\n            throw error;\r\n          });\r\n        return res.json();\r\n      })\r\n      .then(folder => {\r\n        this.context.addFolder(folder);\r\n        this.setState({ folder: { value: \"\", touched: false } });\r\n        this.props.history.goBack();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"add-folder-container\">\r\n        <form onSubmit={event => this.handleSubmit(event)}>\r\n          <label htmlFor=\"folder name\">Folder Name:</label>\r\n          <input\r\n            onChange={e => this.getFolderTitle(e.target.value)}\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            defaultValue=\"Untitled Folder\"\r\n          />\r\n          <button type=\"submit\" disabled={this.validateTitle()}>\r\n            Submit\r\n          </button>{\" \"}\r\n          <div className=\"return-button-container\">\r\n            <button\r\n              onClick={this.props.history.goBack}\r\n              type=\"button\"\r\n              className=\"return-button\"\r\n            >\r\n              Go Back\r\n            </button>\r\n          </div>\r\n        </form>\r\n        {this.state.folder.touched && (\r\n          <ValidationError message={this.validateTitle()} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AddFolder);\r\n","import React from \"react\";\r\nimport \"./AddNote.css\";\r\nimport Context from \"../context\";\r\nimport Config from \"../config\";\r\nimport ValidationError from \"../ValidationError\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass AddNote extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: {\r\n        value: \"\",\r\n        touched: false\r\n      },\r\n      content: {\r\n        value: \"\",\r\n        filled: false\r\n      },\r\n      folderId: {\r\n        value: \"\",\r\n        chosen: false\r\n      },\r\n      modified: new Date()\r\n    };\r\n  }\r\n  static contextType = Context;\r\n\r\n  validateName = fieldValue => {\r\n    const name = this.state.name.value.trim();\r\n    if (name.length === 0) {\r\n      return \"Please enter a name for the note\";\r\n    } else if (name.length < 3 || name.length > 20) {\r\n      return \"Note name should be between 3 and 20 characters\";\r\n    }\r\n  };\r\n\r\n  validateContent = fieldValue => {\r\n    const content = this.state.content.value;\r\n    if (content.length === 0) {\r\n      return \"Please enter content\";\r\n    }\r\n  };\r\n\r\n  validateFolderId = fieldValue => {\r\n    const folderId = this.state.folderId.value;\r\n    if (folderId === null) {\r\n      return \"Please select a folder\";\r\n    }\r\n  };\r\n\r\n  getTitle = name => {\r\n    this.setState({\r\n      name: { value: name, touched: true }\r\n    });\r\n  };\r\n\r\n  getContent = content => {\r\n    this.setState({\r\n      content: { value: content, filled: true }\r\n    });\r\n  };\r\n\r\n  getFolderId = folderId => {\r\n    this.setState({\r\n      folderId: {\r\n        value: folderId,\r\n        chosen: true\r\n      }\r\n    });\r\n  };\r\n\r\n  isFormValid = () => {\r\n    const { name, content, folderId } = this.state;\r\n    return name.value && content.value && folderId.value;\r\n  };\r\n  // add body: JSON.stringify\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const note = {\r\n      note_name: event.target.name.value,\r\n      folder: event.target.folderId.value,\r\n      content: event.target.content.value\r\n    };\r\n    fetch(`${Config.API_ENDPOINT}/api/notes`, {\r\n      method: \"post\",\r\n      body: JSON.stringify(note),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${Config.API_KEY}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Oops... Something went wrong\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(note => {\r\n        this.context.addNote(note);\r\n        this.props.history.goBack();\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const valid = this.isFormValid();\r\n    return (\r\n      <div className=\"add-note-container\">\r\n        <form onSubmit={e => this.handleSubmit(e)}>\r\n          <div className=\"add-name-container\">\r\n            <label htmlFor=\"add name\" className=\"add-note-label\" /> Add Title:\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              placeholder=\"My To Dos\"\r\n              onChange={e => this.getTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          {this.state.name.touched && (\r\n            <ValidationError message={this.validateName()} />\r\n          )}\r\n          <div className=\"add-content-container\">\r\n            <label className=\"add-content-label\" htmlFor=\"add content\" /> Add\r\n            Content:\r\n            <textarea\r\n              id=\"content\"\r\n              name=\"content\"\r\n              placeholder=\"...buy groceries\"\r\n              onChange={e => this.getContent(e.target.value)}\r\n            />\r\n            {!this.state.content.value && (\r\n              <ValidationError message={this.validateContent()} />\r\n            )}\r\n          </div>\r\n          <select\r\n            name=\"folderId\"\r\n            onChange={e => this.getFolderId(e.target.value)}\r\n          >\r\n            <option value={\"\"}>Select Folder</option>\r\n            {this.context.folders.map(folder => (\r\n              <option key={folder.id} value={folder.id}>\r\n                {folder.folder_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {!this.state.folderId.chosen && (\r\n            <ValidationError message={this.validateFolderId()} />\r\n          )}\r\n          <div className=\"button-container\">\r\n            <button type=\"submit\" disabled={!valid}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n          <div className=\"note-return-button\">\r\n            <button type=\"button\" onClick={this.props.history.goBack}>\r\n              Go Back\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AddNote);\r\n","import React from \"react\"\r\n\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true}\r\n    }\r\n\r\n \r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return(<h2> Could not display</h2>)\r\n        }\r\n        return this.props.children;\r\n    }\r\n    \r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Context from \"./context\";\r\nimport { Route, Link, withRouter } from \"react-router-dom\";\r\nimport Config from \"./config\";\r\nimport Folders from \"./Folders/Folders\";\r\nimport EditFolder from \"./editFolder/EditFolder\";\r\n\r\nimport EditNote from \"./editNote/EditNote\";\r\nimport NotesListMain from \"./NotesListMain/NotesListMain\";\r\nimport NoteContent from \"./NoteContent/NoteContent\";\r\nimport AddFolder from \"./AddFolder/AddFolder\";\r\nimport AddNote from \"./AddNote/AddNote\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notes: [],\r\n      folders: [],\r\n      error: null\r\n    };\r\n  }\r\n  static contextType = Context;\r\n\r\n  setNote = note => {\r\n    this.setState({\r\n      note,\r\n      error: null\r\n    });\r\n  };\r\n\r\n  setFolder = folder => {\r\n    this.setState({\r\n      folder,\r\n      error: null\r\n    });\r\n  };\r\n\r\n  addFolder = folder => {\r\n    this.setState({ folders: [...this.state.folders, folder] });\r\n  };\r\n\r\n  addNote = note => {\r\n    this.setState({ notes: [...this.state.notes, note] });\r\n  };\r\n\r\n  deleteNote = noteId => {\r\n    // should i add Number()\r\n    this.setState({\r\n      notes: this.state.notes.filter(note => note.id !== parseInt(noteId))\r\n    });\r\n  };\r\n\r\n  deleteFolder = folderId => {\r\n    this.setState({\r\n      folders: this.state.folders.filter(\r\n        folder => folder.id !== parseInt(folderId)\r\n      ),\r\n      notes: this.state.notes.filter(note => note.folder !== parseInt(folderId))\r\n    });\r\n  };\r\n  // refactor fetch headers\r\n  componentDidMount() {\r\n    Promise.all([\r\n      fetch(`${Config.API_ENDPOINT}/api/folders`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${Config.API_KEY}`\r\n        }\r\n      }),\r\n      fetch(`${Config.API_ENDPOINT}/api/notes`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${Config.API_KEY}`\r\n        }\r\n      })\r\n    ])\r\n      .then(([foldersRes, notesRes]) => {\r\n        if (!foldersRes.ok)\r\n          return foldersRes.json().then(e => Promise.reject(e));\r\n        if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e));\r\n        return Promise.all([foldersRes.json(), notesRes.json()]);\r\n      })\r\n      .then(([folders, notes]) => {\r\n        this.setState({ folders: folders });\r\n        this.setState({ notes: notes });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  updateNote = updatedNote => {\r\n    this.setState({\r\n      notes: this.state.notes.map(\r\n        note => (note.id !== updatedNote.id ? note : updatedNote) //parseInt?\r\n      )\r\n    });\r\n  };\r\n\r\n  updateFolder = updatedFolder => {\r\n    this.setState({\r\n      folders: this.state.folders.map(folder =>\r\n        folder.id !== updatedFolder.id ? folder : updatedFolder\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const contextValue = {\r\n      notes: this.state.notes,\r\n      folders: this.state.folders,\r\n      addFolder: this.addFolder,\r\n      addNote: this.addNote,\r\n      deleteNote: this.deleteNote,\r\n      deleteFolder: this.deleteFolder,\r\n      updateFolder: this.updateFolder,\r\n      updateNote: this.updateNote\r\n    };\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n          <h1 className=\"app-header\">\r\n            <Link to=\"/\">Noteful</Link>\r\n          </h1>\r\n        </header>\r\n        <Context.Provider value={contextValue}>\r\n          <div className=\"sidebar flex\">\r\n            <ErrorBoundary>\r\n              <Route exact path=\"/\" component={Folders} />\r\n              <Route exact path=\"/folders/:folderId\" component={Folders} />\r\n            </ErrorBoundary>\r\n          </div>\r\n          <main>\r\n            <ErrorBoundary>\r\n              <Route exact path=\"/\" component={NotesListMain} />\r\n              <Route\r\n                exact\r\n                path=\"/folders/:folderId\"\r\n                component={NotesListMain}\r\n              />\r\n            </ErrorBoundary>\r\n          </main>\r\n          <ErrorBoundary>\r\n            <Route exact path=\"/notes/:noteId\" component={NoteContent} />\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <Route exact path=\"/add-folder\" component={AddFolder} />\r\n            <Route exact path=\"/edit-folder/:folderId\" component={EditFolder} />\r\n            <Route exact path=\"/edit-note/:noteId\" component={EditNote} />\r\n            <Route exact path=\"/add-note\" component={AddNote} />\r\n          </ErrorBoundary>\r\n        </Context.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}